/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import { TestPool } from "./TestPool";

export class TestPoolFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _token1Address: string,
    _token2Address: string,
    overrides?: Overrides
  ): Promise<TestPool> {
    return super.deploy(
      _token1Address,
      _token2Address,
      overrides || {}
    ) as Promise<TestPool>;
  }
  getDeployTransaction(
    _token1Address: string,
    _token2Address: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _token1Address,
      _token2Address,
      overrides || {}
    );
  }
  attach(address: string): TestPool {
    return super.attach(address) as TestPool;
  }
  connect(signer: Signer): TestPoolFactory {
    return super.connect(signer) as TestPoolFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestPool {
    return new Contract(address, _abi, signerOrProvider) as TestPool;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token1Address",
        type: "address"
      },
      {
        internalType: "address",
        name: "_token2Address",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      }
    ],
    name: "Approval",
    type: "event"
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      }
    ],
    name: "Transfer",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        internalType: "address",
        name: "spender",
        type: "address"
      }
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address"
      }
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256"
      }
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256"
      }
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "token2",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address"
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405162001153380380620011538339818101604052604081101561003557600080fd5b508051602091820151604080518082018252600d8082526c2a32b9ba2837b7b62a37b5b2b760991b828701818152845180860190955291845295830195909552805193949293909261008a91600391906100e5565b50805161009e9060049060208401906100e5565b505060058054601260ff1990911617610100600160a81b0319166101006001600160a01b039586160217905550600680546001600160a01b03191691909216179055610180565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061012657805160ff1916838001178555610153565b82800160010185558215610153579182015b82811115610153578251825591602001919060010190610138565b5061015f929150610163565b5090565b61017d91905b8082111561015f5760008155600101610169565b90565b610fc380620001906000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80633950935111610097578063a9059cbb11610066578063a9059cbb146102ee578063b6b55f251461031a578063d21220a714610337578063dd62ed3e1461033f576100f5565b8063395093511461026857806370a082311461029457806395d89b41146102ba578063a457c2d7146102c2576100f5565b806323b872dd116100d357806323b872dd146101d157806325be124e146102075780632e1a7d4d1461022b578063313ce5671461024a576100f5565b806306fdde03146100fa578063095ea7b31461017757806318160ddd146101b7575b600080fd5b61010261036d565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013c578181015183820152602001610124565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561018d57600080fd5b506001600160a01b038135169060200135610403565b604080519115158252519081900360200190f35b6101bf610420565b60408051918252519081900360200190f35b6101a3600480360360608110156101e757600080fd5b506001600160a01b03813581169160208101359091169060400135610426565b61020f6104b3565b604080516001600160a01b039092168252519081900360200190f35b6102486004803603602081101561024157600080fd5b50356104c2565b005b6102526105e9565b6040805160ff9092168252519081900360200190f35b6101a36004803603604081101561027e57600080fd5b506001600160a01b0381351690602001356105f2565b6101bf600480360360208110156102aa57600080fd5b50356001600160a01b0316610646565b610102610661565b6101a3600480360360408110156102d857600080fd5b506001600160a01b0381351690602001356106c2565b6101a36004803603604081101561030457600080fd5b506001600160a01b038135169060200135610730565b6102486004803603602081101561033057600080fd5b5035610744565b61020f610870565b6101bf6004803603604081101561035557600080fd5b506001600160a01b0381358116916020013516610884565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103f95780601f106103ce576101008083540402835291602001916103f9565b820191906000526020600020905b8154815290600101906020018083116103dc57829003601f168201915b5050505050905090565b60006104176104106108af565b84846108b3565b50600192915050565b60025490565b600061043384848461099f565b6104a98461043f6108af565b6104a485604051806060016040528060288152602001610ed7602891396001600160a01b038a1660009081526001602052604081209061047d6108af565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610b0616565b6108b3565b5060019392505050565b6006546001600160a01b031681565b806104cc33610646565b10156104d757600080fd5b6005546040805163a9059cbb60e01b81523360048201526024810184905290516101009092046001600160a01b03169163a9059cbb916044808201926020929091908290030181600087803b15801561052f57600080fd5b505af1158015610543573d6000803e3d6000fd5b505050506040513d602081101561055957600080fd5b50506006546040805163a9059cbb60e01b81523360048201526024810184905290516001600160a01b039092169163a9059cbb916044808201926020929091908290030181600087803b1580156105af57600080fd5b505af11580156105c3573d6000803e3d6000fd5b505050506040513d60208110156105d957600080fd5b506105e690503382610b9d565b50565b60055460ff1690565b60006104176105ff6108af565b846104a485600160006106106108af565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610ca516565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103f95780601f106103ce576101008083540402835291602001916103f9565b60006104176106cf6108af565b846104a485604051806060016040528060258152602001610f6960259139600160006106f96108af565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610b0616565b600061041761073d6108af565b848461099f565b600554604080516323b872dd60e01b81523360048201523060248201526044810184905290516101009092046001600160a01b0316916323b872dd916064808201926020929091908290030181600087803b1580156107a257600080fd5b505af11580156107b6573d6000803e3d6000fd5b505050506040513d60208110156107cc57600080fd5b50516107d757600080fd5b600654604080516323b872dd60e01b81523360048201523060248201526044810184905290516001600160a01b03909216916323b872dd916064808201926020929091908290030181600087803b15801561083157600080fd5b505af1158015610845573d6000803e3d6000fd5b505050506040513d602081101561085b57600080fd5b505161086657600080fd5b6105e63382610d06565b60055461010090046001600160a01b031681565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166108f85760405162461bcd60e51b8152600401808060200182810382526024815260200180610f456024913960400191505060405180910390fd5b6001600160a01b03821661093d5760405162461bcd60e51b8152600401808060200182810382526022815260200180610e8f6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166109e45760405162461bcd60e51b8152600401808060200182810382526025815260200180610f206025913960400191505060405180910390fd5b6001600160a01b038216610a295760405162461bcd60e51b8152600401808060200182810382526023815260200180610e4a6023913960400191505060405180910390fd5b610a34838383610e02565b610a7781604051806060016040528060268152602001610eb1602691396001600160a01b038616600090815260208190526040902054919063ffffffff610b0616565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610aac908263ffffffff610ca516565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610b955760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b5a578181015183820152602001610b42565b50505050905090810190601f168015610b875780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6001600160a01b038216610be25760405162461bcd60e51b8152600401808060200182810382526021815260200180610eff6021913960400191505060405180910390fd5b610bee82600083610e02565b610c3181604051806060016040528060228152602001610e6d602291396001600160a01b038516600090815260208190526040902054919063ffffffff610b0616565b6001600160a01b038316600090815260208190526040902055600254610c5d908263ffffffff610e0716565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b600082820183811015610cff576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610d61576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610d6d60008383610e02565b600254610d80908263ffffffff610ca516565b6002556001600160a01b038216600090815260208190526040902054610dac908263ffffffff610ca516565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b505050565b6000610cff83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610b0656fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220887fb33bca7f3113d7d722359166caa4c3aa3f1d8cf223b5dc487be94410acd264736f6c63430006040033";
